// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


// prisma/schema.prisma

model Occasion {
  id        Int      @id @default(autoincrement())
  title     String
  date      DateTime
  location  String
  capacity  Int
  ownerId   Int
  owner     User     @relation(fields: [ownerId], references: [id])
  status    OccasionStatus @default(DRAFT)
  invitations Invitation[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Invitation {
  id         Int      @id @default(autoincrement())
  occasion   Occasion @relation(fields: [occasionId], references: [id])
  occasionId Int
  invitee    User     @relation(fields: [inviteeId], references: [id])
  inviteeId  Int
  status     InvitationStatus @default(PENDING)
  additionalGuests Int @default(0)
  guests     Guest[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Guest {
  id           Int        @id @default(autoincrement())
  name         String
  invitation   Invitation @relation(fields: [invitationId], references: [id])
  invitationId Int
  qrCode       String     @unique
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model User {
  id          Int      @id @default(autoincrement())
  name        String
  email       String   @unique
  password    String
  phoneNumber String?
  occasions   Occasion[]
  invitations Invitation[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum InvitationStatus {
  PENDING
  ACCEPTED
  DECLINED
  MAYBE
}

enum OccasionStatus {
  DRAFT
  PUBLISHED
  CANCELLED
  COMPLETED
}